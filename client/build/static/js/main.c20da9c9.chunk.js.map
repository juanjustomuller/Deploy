{"version":3,"sources":["views/Details/Details.module.css","components/CardsContainer/CardsContainer.module.css","components/NavBar/NavBar.module.css","components/SearchBar/SearchBar.module.css","components/Paginado/Paginado.module.css","views/Landing/Landing.module.css","views/Form/Form.module.css","components/CardsContainer/CardsContainer.jsx","redux/actions.js","components/Paginado/Paginado.jsx","views/Home/Home.jsx","img/pokeballLogo.png","views/Landing/Landing.jsx","views/Details/Detail.jsx","views/Form/validation.jsx","views/Form/Form.jsx","components/SearchBar/SearchBar.jsx","components/NavBar/NavBar.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","views/Home/Home.module.css"],"names":["module","exports","CardsContainer","_ref","image","name","types","attack","hp","id","_jsxs","className","style","cardContainer","children","cardTitle","_jsx","nameCard","cardInfo","src","alt","map","e","index","GET_POKEMONS","FILTER_CREATED","ORDER_BY_NAME","GET_NAME_POKEMONS","GET_TYPES","GET_DETAIL","ORDER_BY_ATTACK","ORDER_BY_HP","FILTER_BY_TYPE","getPokemons","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","apiData","pokemons","wrap","_context","prev","next","axios","get","sent","data","type","payload","stop","_x","apply","arguments","getTypes","_ref3","_callee3","info","_context3","abrupt","_x3","Paginado","pokemonsPerPage","paginado","pageNumbers","i","Math","ceil","push","pagination","number","listStyle","buttonP","onClick","Home","useDispatch","useSelector","state","_useState","useState","_useState2","_slicedToArray","setOrden","allTypes","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","useEffect","handlefilterCreated","event","target","value","console","log","handleFilterTypes","preventDefault","handleSort","concat","handleSortAttack","handleSortHp","homeContainer","containerButton","recargar","handleClick","reloadIcon","filtersContainer","filterSelect","onChange","cardRow","elem","Link","to","cardLink","paginadoContainer","length","pageNumber","Landing","containerLanding","pokeballButton","pokeballLogo","Detail","_detailPokemons$","_detailPokemons$2","_detailPokemons$3","_detailPokemons$4","_detailPokemons$5","_detailPokemons$6","_detailPokemons$7","_detailPokemons$8","_detailPokemons$9","_detailPokemons$10","_detailPokemons$11","_detailPokemons$12","_detailPokemons$13","_detailPokemons$14","_detailPokemons$15","useParams","_ref5","_callee5","response","_context5","t0","_x5","getDetail","detailPokemons","detail","typesColors","fire","normal","fighting","flying","ground","poison","rock","bug","ghost","steel","water","grass","electric","psychic","ice","dragon","dark","fairy","unknown","shadow","containerCompleto","spanBo","buttonVolver","volverSpan","bodyDetail","conteinerDetail","backgroundColor","backgroundDetail","imageDetail","contentDetail","pokemonNameDetail","pokemonType","join","pokemonStats","defense","speed","color","height","weight","containerLoading","loading","validation","input","errors","test","Form","setInput","setErrors","handleChange","fieldName","fieldValue","validationErrors","_objectSpread","_defineProperty","handleSubmit","_ref2","_callee2","_context2","post","alert","error","_x2","containerF","formContainer","onSubmit","formTitle","inputContainer","placeholder","spanError","typeS","_toConsumableArray","handleSelect","selectType","t","crearP","buttonCrear","go","SearchBar","setName","_ref4","_callee4","_context4","_x4","getNamePokemons","containerSB","handleInputChange","inputSB","buttonSB","NavBar","navContainer","navImgCont","linkContainer","linkHome","linkCrear","defaults","baseURL","App","location","useLocation","pathname","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","pokemonsBackUp","rootReducer","undefined","action","filteredPokemons","filter","pokemon","isNaN","filterType","includes","sortAll","sort","a","b","sortedAttack","sortedHp","notFound","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","Provider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.c20da9c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerCompleto\":\"Details_containerCompleto__2M3ra\",\"spanBo\":\"Details_spanBo__1uJcN\",\"buttonVolver\":\"Details_buttonVolver__3t2jL\",\"volverSpan\":\"Details_volverSpan__ds4iK\",\"bodyDetail\":\"Details_bodyDetail__2Yuq8\",\"containerDetail\":\"Details_containerDetail__3Y7ni\",\"backgroundDetail\":\"Details_backgroundDetail__3ZOcm\",\"imageDetail\":\"Details_imageDetail__DErT2\",\"contentDetail\":\"Details_contentDetail__S0Ycf\",\"pokemonNameDetail\":\"Details_pokemonNameDetail__1AN32\",\"pokemonType\":\"Details_pokemonType__1SQCY\",\"pokemonStats\":\"Details_pokemonStats__3LgNx\",\"scale-up-hor-left\":\"Details_scale-up-hor-left__3_dWD\",\"containerLoading\":\"Details_containerLoading__25MHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"CardsContainer_cardContainer__25UDD\",\"nameCard\":\"CardsContainer_nameCard__yUUYR\",\"cardInfo\":\"CardsContainer_cardInfo__CryMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"NavBar_navContainer__1sHq6\",\"navLinkCont\":\"NavBar_navLinkCont__D_Z9V\",\"linkContainer\":\"NavBar_linkContainer__w81jD\",\"linkHome\":\"NavBar_linkHome__1bZaV\",\"linkCrear\":\"NavBar_linkCrear__31lks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSB\":\"SearchBar_containerSB__3D4XN\",\"inputSB\":\"SearchBar_inputSB__1Ge68\",\"buttonSB\":\"SearchBar_buttonSB__2ugsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginado_pagination__Gc59y\",\"buttonP\":\"Paginado_buttonP__2VAr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLanding\":\"Landing_containerLanding__1NMvq\",\"pokeballButton\":\"Landing_pokeballButton__1ep3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerF\":\"Form_containerF__1xB2W\",\"formContainer\":\"Form_formContainer__uRfHA\",\"formTitle\":\"Form_formTitle__1w1_P\",\"inputContainer\":\"Form_inputContainer__3WadR\",\"form\":\"Form_form__2SX7_\",\"selectType\":\"Form_selectType__24bKh\",\"spanError\":\"Form_spanError__3lGSx\",\"buttonCrear\":\"Form_buttonCrear__2I-SA\",\"buttonVolver\":\"Form_buttonVolver__f1YNI\",\"go\":\"Form_go__12BnY\"};","import style from \"./CardsContainer.module.css\";\r\n//import {useSelector} from 'react-redux';\r\n\r\n\r\nconst CardsContainer = ({ image, name, types, attack, hp, id }) => {\r\n    return (\r\n        <div className={style.cardContainer} key={id}>\r\n            <div className={style.cardTitle}>\r\n                <h2 className={style.nameCard}>{name}</h2>\r\n                <h5 className={style.hp}>Hp:{hp}</h5>\r\n                <h5 className={style.hp}>Attack: {attack}</h5>\r\n            </div>\r\n            <div className={style.cardInfo}>\r\n                <img src={image} alt={name}  />\r\n                <div className={style.cardInfo}>\r\n                    {types.map((e, index) => (\r\n                        <p key={index}>{e}</p>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default CardsContainer;\r\n","import axios from \"axios\";\r\n\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const FILTER_CREATED = \"FILTER_CREATED\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const GET_NAME_POKEMONS = \"GET_NAME_POKEMONS\";\r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\r\nexport const ORDER_BY_HP = \"ORDER_BY_HP\";\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\n\r\n\r\n\r\n//OBTENGO TODOS LOS POKEMONES\r\nexport const getPokemons = () => {\r\n    return async function (dispatch) {\r\n        const apiData = await axios.get(\"/pokemons\");  //https://pokeapi.co/api/v2/pokemon/?offset=200&limit=200\r\n        //console.log(\"API Data:\", apiData)\r\n        const pokemons = apiData.data;\r\n        //console.log(\"Pokemons:\", pokemons);\r\n        dispatch({\r\n            type: GET_POKEMONS,\r\n            payload: pokemons\r\n        })\r\n    }\r\n}\r\n\r\n//CREO POKEMONES\r\nexport const createPokemon = (info) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            const response = await axios.post(\"/pokemons/\", info)\r\n            \r\n            alert(\"El pokemon fue creado correctamente\");\r\n            //console.log(\"RESPONSE:\", response)\r\n            return response\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error.response.data.error)\r\n        }\r\n    }\r\n}\r\n\r\n//GET TYPES\r\nexport const getTypes = () => {\r\n    return async (dispatch) => {\r\n        let info = await axios.get(\"/types\", {});\r\n        return dispatch({ type: GET_TYPES, payload: info.data });\r\n    };\r\n};\r\n\r\n//FILTRO POR CREADO EN DB O EN API\r\nexport const filterCreated = (payload) => {console.log(payload)\r\n    return {\r\n        type: FILTER_CREATED,\r\n        payload\r\n    }\r\n    \r\n}\r\n\r\n//FILTRO POR TIPOS\r\nexport const filterByType = (payload) => {\r\n    return {\r\n        type: FILTER_BY_TYPE,\r\n        payload,\r\n    };\r\n};\r\n\r\n//ORDENAMIENTO POR NOMBRE(ALFABETICO en la Home)\r\nexport const orderByName = (payload) => {\r\n    return {\r\n        type: ORDER_BY_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\n//ORDENAMIENTO POR ATAQUE\r\nexport const orderByAttack = (payload) => {\r\n    return {\r\n        type: ORDER_BY_ATTACK,\r\n        payload\r\n    }\r\n}\r\n\r\n//ORDENAMIENTO POR HP\r\nexport const orderByHp = (payload) => {\r\n    return {\r\n        type: ORDER_BY_HP,\r\n        payload\r\n    }\r\n}\r\n\r\n//ORDENAMIENTO POR NOMBRE(SEARCHBAR)\r\nexport const getNamePokemons = (name) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            let response = await axios.get(\r\n                `/pokemons?name=${name}`)\r\n            return dispatch({\r\n                type: GET_NAME_POKEMONS,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            //console.log(error);\r\n            return dispatch({\r\n                type: GET_NAME_POKEMONS,\r\n                payload: { error: error },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//GET DETAIL\r\nexport const getDetail = (id) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            let response = await axios.get(`/pokemons/${id}`)\r\n            return dispatch({\r\n                type: GET_DETAIL,\r\n                payload: response.data,\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport style from \"./Paginado.module.css\";\r\n\r\nexport default function Paginado({ pokemonsPerPage, pokemons, paginado }) {\r\n    const pageNumbers = []\r\n\r\n    for (let i = 0; i <= Math.ceil(pokemons / pokemonsPerPage); i++) {\r\n        pageNumbers.push(i + 1);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={style.pagination}>\r\n                {pageNumbers && pageNumbers.map(number => (\r\n                    <li  key = { number }  style={{ listStyle: \"none\" }} >\r\n                    <button className={style.buttonP} onClick={() => paginado(number)}>{number}</button>\r\n                    </li>\r\n                ))} \r\n        </ul>\r\n        </nav >\r\n    )\r\n}\r\n\r\n","import CardsContainer from \"../../components/CardsContainer/CardsContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPokemons, filterCreated, orderByName, orderByHp, orderByAttack, filterByType, getTypes } from \"../../redux/actions\";\r\nimport Paginado from \"../../components/Paginado/Paginado\";\r\nimport style from \"./Home.module.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const pokemons = useSelector((state) => state.pokemons)   //en pokemons traeme el estado de pokemons\r\n    const [orden, setOrden] = useState(\"\");   //estado local vacio, q solo lo voy a usar es para cuando yo setee esta pagina me modifique el estado local y se renderice\r\n    const allTypes = useSelector((state) => state.types);\r\n    \r\n    //console.log(\"All Types:\", allTypes);\r\n    ////////////////////////////PAGINADO////////////////////////\r\n    const [currentPage, setCurrentPage] = useState(1);                  //declaro estado local en el q le paso la pagina actual,  y cual va a ser la pag actual (va a arrancar en 1)\r\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12);         //declaro otro estado local que tengo la cant de pokemons por pagina y va a arrancar en 12\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage;           //seteo el indice del ultimo pokemon, y le digo sobre la pag actual mutiplicame la cant de pokemon * pagina\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;   //seteo el indice del primer pokemon, y me lo va a dar la resta entre el indice del ultimo poquemon menos los pokemon por pagina\r\n    const currentPokemons = pokemons.slice(                             //finalmente me declaro la constante donde se va a ir guardando cuales son los pokemons que hay q renderizar dependiendo de la pagina\r\n        indexOfFirstPokemon,                                            //a todos los pokemons cortmelos(slice) con el indice del primer pokemon de esa pag y el indice del ultimo pokemon de esa pagina\r\n        indexOfLastPokemon);                                            //por eso se va a ir modificando dependiendo de la pag q yo este\r\n\r\n    const paginado = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n    ///////////////////////////////////////////////////////////////////\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPokemons());\r\n        dispatch(getTypes());\r\n    }, [dispatch])\r\n    //cuando se monta, que haga el dispatch (despacho la accion)\r\n    // useEffect           useDispatch\r\n\r\n    ////////////////FILTROS//////////////////////////////////////////////////////////////////////////\r\n\r\n    const handlefilterCreated = (event) => {\r\n        dispatch(filterCreated(event.target.value))\r\n        setCurrentPage(1);\r\n\r\n    }\r\n\r\n\r\n    const handleFilterTypes = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.value !== \"Tipos\") {\r\n            dispatch(filterByType(e.target.value));\r\n        }\r\n        setCurrentPage(1);\r\n    };\r\n    ////////////////////////////////////////ORDENAMIENTOS////////////////////////////////////////////////////////\r\n\r\n    const handleSort = (event) => {\r\n        event.preventDefault()\r\n        dispatch(orderByName(event.target.value))\r\n        setCurrentPage(1);   //cuando hago el ordenamiento, le pido q me setee en la pagina 1\r\n        setOrden(`Ordenado ${event.target.value}`)\r\n    }\r\n\r\n    const handleSortAttack = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.value !== \"attack\") dispatch(orderByAttack(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrden(`Ordenado ${e.target.value}`);\r\n    };\r\n\r\n    const handleSortHp = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.value !== \"jp\") dispatch(orderByHp(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrden(`Ordenado ${e.target.value}`);\r\n    };\r\n    ////////////////////////////////////////RECARGAR POKEMONS////////////////////////////////////////////////////////////\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getPokemons());\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div className={style.homeContainer}>\r\n\r\n            <div className={style.containerButton}>\r\n                <button className={style.recargar} onClick={(e) => { handleClick(e)}} >\r\n                <span className={style.reloadIcon}>⟳</span> Recargar Pokémon\r\n                </button>\r\n            </div>\r\n\r\n            <div className={style.filtersContainer}>\r\n                <select className={style.filterSelect} onChange={(event) => handleSort(event)}>\r\n                    <option value=\"asc\">A-Z</option>\r\n                    <option value=\"desc\">Z-A</option>\r\n                </select>\r\n\r\n\r\n                <select className={style.filterSelect} onChange={event => handlefilterCreated(event)}>\r\n                    <option value=\"All\">Todos</option>\r\n                    <option value=\"created\">Creados</option>\r\n                    <option value=\"api\">Api</option>\r\n                </select>\r\n\r\n                <select className={style.filterSelect} onChange={(e) => handleFilterTypes(e)}>\r\n                    <option>Tipos</option>\r\n                    <option value=\"All\">Todos</option>\r\n                    {allTypes?.map((e) => {\r\n                        return (\r\n                            <option key={e.id} value={e.name}>\r\n                                {e.name}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n\r\n                <select className={style.filterSelect} onChange={e => handleSortAttack(e)}>\r\n                    <option value=\"attack\">Ataque</option>\r\n                    <option value=\"min\">min</option>\r\n                    <option value=\"max\">max</option>\r\n                </select>\r\n\r\n\r\n\r\n                <select className={style.filterSelect} onChange={(event) => handleSortHp(event)}>\r\n                    <option value=\"hp\">Hp</option>\r\n                    <option value=\"min\">min</option>\r\n                    <option value=\"max\">max</option>\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className={`${style.CardsContainer} ${style.cardRow}`}>\r\n                \r\n            {currentPokemons?.map((elem, index) => {\r\n                //console.log(\"Current Pokemons:\", currentPokemons);\r\n                return (\r\n                    <Link key={index} to={`/detail/${elem.id}`} className={style.cardLink}>\r\n                        <CardsContainer\r\n                            name={elem.name}\r\n                            hp={elem.hp}\r\n                            attack={elem.attack}\r\n                            image={elem.image}\r\n                            id={elem.id}\r\n                            types={elem.types}\r\n                            key={index}\r\n                        />\r\n                    </Link>\r\n                )\r\n            })}\r\n            </div>\r\n            <div className={style.paginadoContainer}>\r\n            <Paginado className={style.paginado}\r\n                pokemonsPerPage={pokemonsPerPage}\r\n                pokemons={pokemons.length}\r\n                paginado={paginado} />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/pokeballLogo.7fbaba7e.png\";","import { Link } from \"react-router-dom\";\r\nimport style from \"./Landing.module.css\";\r\nimport pokeballLogo from \"../../img/pokeballLogo.png\";\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div className={style.containerLanding}>\r\n        <div>\r\n        <button className={style.pokeballButton}>\r\n            <Link to='/home'>\r\n            <img src={pokeballLogo} alt=\"Pokebola\" />\r\n            </Link>\r\n        </button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDetail } from \"../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport style from \"./Details.module.css\";\r\n\r\n\r\n\r\nconst Detail = () => {\r\n\r\n    let { id } = useParams();\r\n    //console.log(id);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetail(id))\r\n        return () => {\r\n            dispatch({\r\n                type: \"GET_DETAIL\",\r\n                payload: {}\r\n            })\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    const detailPokemons = useSelector((state) => state.detail);\r\n    console.log(detailPokemons);\r\n\r\n    const typesColors = {\r\n        fire: \"#F57D31\",\r\n        normal: \"#AAA67F\",\r\n        fighting: \"#D3425F\",\r\n        flying: \"#A891EC\",\r\n        ground: \"#DEC16B\",\r\n        poison: \"#A43E9E\",\r\n        rock: \"#B69E31\",\r\n        bug: \"#A7B723\",\r\n        ghost: \"#70559B\",\r\n        steel: \"#5695A3\",\r\n        water: \"#6493EB\",\r\n        grass: \"#74CB48\",\r\n        electric: \"#F9CF30\",\r\n        psychic: \"#FB5584\",\r\n        ice: \"#9AD6DF\",\r\n        dragon: \"#7037FF\",\r\n        dark: \"#75574C\",\r\n        fairy: \"#E69EAC\",\r\n        unknown: \"#BF5481\",\r\n        shadow: \"#36045E\",\r\n    };\r\n\r\n    if (!detailPokemons) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={style.containerCompleto}>\r\n            <Link className={style.spanBo} to=\"/home\">\r\n                <button className={style.buttonVolver}>\r\n                    <span className={style.volverSpan}>Volver</span>\r\n                </button>\r\n            </Link>\r\n            {\r\n                detailPokemons.length > 0 ? (\r\n                    <div className={style.bodyDetail}>\r\n                        <div\r\n                            className={style.conteinerDetail}\r\n                            style={{\r\n                                backgroundColor: typesColors[detailPokemons[0]?.types[0]],\r\n                            }}\r\n                        >\r\n\r\n                            <div className={style.backgroundDetail}>\r\n                                <img\r\n                                    className={style.imageDetail}\r\n                                    src={detailPokemons[0].image}\r\n                                    alt={detailPokemons[0].name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={style.contentDetail}>\r\n                                <h1 className={style.pokemonNameDetail}>\r\n                                    {detailPokemons[0].name}\r\n                                </h1>\r\n\r\n                                <h3 className={style.pokemonType}\r\n                                    style={{\r\n                                        backgroundColor: typesColors[detailPokemons[0]?.types[0]],\r\n                                    }}>\r\n                                    <p>TYPE: </p>{detailPokemons[0]?.types.join(\" \")}\r\n                                </h3>\r\n\r\n                                <div className={style.pokemonStats}>\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span>HP: </span> {detailPokemons[0]?.hp}\r\n                                    </p>\r\n\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span>ATTACK: </span>{detailPokemons[0]?.attack}\r\n                                    </p>\r\n\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span>DEFENSE: </span>{detailPokemons[0]?.defense}\r\n                                    </p>\r\n\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span>SPEED: </span>{detailPokemons[0]?.speed}\r\n                                    </p>\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span style={{ color: \"black\" }}>HEIGHT: </span>{detailPokemons[0]?.height}\r\n                                    </p>\r\n\r\n                                    <p style={{ backgroundColor: typesColors[detailPokemons[0]?.types[0]], }}>\r\n                                        <span>WEIGHT: </span>{detailPokemons[0]?.weight}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className={style.containerLoading}>\r\n                        <p className={style.loading}>...Loading</p>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Detail;","export const validation = (input) => {\r\n    let errors = {};\r\n\r\n    if (!input.name) {\r\n        errors.name = \"Debe ingresar un nombre\";\r\n    } else if (input.name.length > 10) {\r\n        errors.name = \"No puede tener más de 10 caracteres\";\r\n    } else if (!/^[a-zA-Z]+$/.test(input.name)) {\r\n        errors.name = \"Solo puede contener letras\";\r\n    }\r\n\r\n    if (!input.hp || input.hp <= 0 || input.hp > 255) {\r\n        errors.hp = \"Debe ser mayor a 0 y menor a 255\";\r\n    }\r\n\r\n    if (!input.attack || input.attack <= 0 || input.attack > 255) {\r\n        errors.attack = \"Debe ser mayor a 0 y menor a 255\";\r\n    }\r\n\r\n    if (!input.defense || input.defense <= 0 || input.defense > 255) {\r\n        errors.defense = \"Debe ser mayor a 0 y menor a 255\";\r\n    }\r\n\r\n    if (!input.speed || input.speed <= 0 || input.speed > 255) {\r\n        errors.speed = \"Debe ser mayor a 0 y menor a 255\";\r\n    }\r\n\r\n    if (!input.height || input.height <= 0 || input.height > 255) {\r\n        errors.height = \"Debe ser mayor a 0 y menor a 255\";\r\n    }\r\n\r\n    if (!input.weight || input.weight <= 0 || input.weight > 255) {\r\n        errors.weight = \"Debe ser mayor a 0 y menor a 255\";\r\n    }   \r\n\r\n    if (input.types.length < 1) {\r\n        errors.types = \"Debes elegir al menos 2 tipos\";\r\n    \r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validation;\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport validation from \"./validation\";\r\nimport { createPokemon, getTypes } from \"../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport style from \"./Form.module.css\"\r\n\r\n\r\n\r\nconst Form = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const types = useSelector((state) => state.types)\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-56YdThnTlX2LJ4ixqaLzbfPFOPTzkE1H4Q&usqp=CAU\",\r\n        hp: \"\",\r\n        attack: \"\",\r\n        defense: \"\",\r\n        speed: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        types: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes())\r\n    }, [dispatch])\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    /*const disable = () => {\r\n        let disabled = true;\r\n        for (let error in errors) {\r\n            //console.log(\"soy error\", error);\r\n            if (errors[error] === \"\" || errors[error].length === 0) disabled = false;\r\n            else {\r\n                disabled = true;\r\n                break;\r\n            }\r\n        }\r\n        return disabled;\r\n    };*/\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        // Validamos solo el campo actual\r\n        const validationErrors = validation({ ...input, [fieldName]: fieldValue });\r\n        setErrors({ ...errors, [fieldName]: validationErrors[fieldName] });\r\n\r\n        setInput({\r\n            ...input,\r\n            [fieldName]: fieldValue,\r\n        });\r\n    };\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        e.preventDefault();\r\n        setInput({\r\n            ...input,\r\n            types: [...input.types, e.target.value],\r\n        });\r\n        setErrors(\r\n            validation({\r\n                ...input,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createPokemon(input));\r\n\r\n        setInput({\r\n            name: \"\",\r\n            image: \"\",\r\n            hp: \"\",\r\n            attack: \"\",\r\n            defense: \"\",\r\n            speed: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            types: [],\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.containerF}>\r\n\r\n            <div className={style.formContainer}>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <h3 className={style.formTitle}>CREA UN POKEMON!</h3>\r\n                    <div className={style.inputContainer}>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input.name}\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.name && (<span className={style.spanError} style={{ color: \"#e74c3c\" }}>\r\n                                {errors.name}\r\n                            </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input.image}\r\n                            placeholder=\"Image\"\r\n                            name=\"image\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div >\r\n                            {errors.image && (\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>\r\n                                    {errors.image}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.hp}\r\n                            placeholder=\"Hp\"\r\n                            name=\"hp\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.hp && (\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>\r\n                                    {errors.hp}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.attack}\r\n                            placeholder=\"Attack\"\r\n                            name=\"attack\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.attack && (\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>\r\n                                    {errors.attack}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.defense}\r\n                            placeholder=\"Defense\"\r\n                            name=\"defense\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.defense && (\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>{errors.defense}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.speed}\r\n                            placeholder=\"Speed\"\r\n                            name=\"speed\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.speed && (<span className={style.spanError}\r\n                                style={{ color: \"#e74c3c\" }}>\r\n                                {errors.speed}\r\n                            </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.height}\r\n                            placeholder=\"Height\"\r\n                            name=\"height\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.height && (\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>\r\n                                    {errors.height}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={input.weight}\r\n                            placeholder=\"Weight\"\r\n                            name=\"weight\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div>\r\n                            {errors.weight && (<span className={style.spanError}\r\n                                style={{ color: \"#e74c3c\" }}>\r\n                                {errors.weight}\r\n                            </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.inputContainer}>\r\n                        <label className={style.typeS}>Type: </label>\r\n                        <select\r\n                            onChange={(e) => handleSelect(e)}\r\n                            className={style.selectType}>\r\n                            {types.map((t, index) => (\r\n                                <option key={index} value={t.name}>\r\n                                    {t.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            {errors.types && typeof errors.types === 'string' &&\r\n                                <span className={style.spanError}\r\n                                    style={{ color: \"#e74c3c\" }}>\r\n                                    {errors.types}\r\n                                </span>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.crearP}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            name=\"submit\"\r\n                            className={style.buttonCrear}\r\n                        //disabled={disable()}\r\n                        >\r\n                            <p className={style.go}>CREAR!</p>\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <Link to='/home'><button className={style.buttonVolver}>Volver</button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getNamePokemons } from \"../../redux/actions\";\r\nimport style from \"./SearchBar.module.css\"\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault();\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getNamePokemons(name))\r\n        //console.log(name)\r\n    }\r\n\r\n    return(\r\n        <div className={style.containerSB}>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Busca tu Pokemon...\"\r\n            onChange={(e) => handleInputChange(e)}\r\n            className={style.inputSB}\r\n            />\r\n            <button \r\n            type=\"submit\" \r\n            onClick={(e) => handleSubmit(e)} className={style.buttonSB}>Buscar</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport style from \"./NavBar.module.css\";\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        \r\n    <div className={style.navContainer}> \r\n            <div className={style.navImgCont}>\r\n                <img src=\"\" alt=\"\" />\r\n            </div>\r\n        <div className={style.linkContainer}>\r\n            <Link className={style.linkHome} to=\"/home\">HOME</Link>\r\n            <Link className={style.linkCrear} to=\"/create\">CREATE</Link>\r\n        </div>\r\n        <SearchBar />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import './App.css';\nimport { Route, useLocation } from 'react-router-dom';\nimport  Home from \"./views/Home/Home\";\nimport Landing from './views/Landing/Landing';\nimport Detail from './views/Details/Detail';\nimport Form from './views/Form/Form';\nimport NavBar from './components/NavBar/NavBar';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3001';\n\nfunction App() {\n\n  const location = useLocation();\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== \"/\" && <NavBar />}\n      <Route exact path= \"/\" component={Landing}/>\n      <Route exact path= \"/home\" component={Home}/>\n      <Route path= \"/detail/:id\" component={Detail}/>\n      <Route exact path= \"/create\" component={Form}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    GET_POKEMONS,\r\n    ORDER_BY_ATTACK,\r\n    ORDER_BY_NAME,\r\n    ORDER_BY_HP,\r\n    GET_TYPES,\r\n    FILTER_BY_TYPE,\r\n    FILTER_CREATED,\r\n    GET_NAME_POKEMONS,  \r\n    GET_DETAIL,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    pokemonsBackUp: [],      //copia de todos los pokemons sin tocar \r\n    types: [],\r\n    detail: {},\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n                pokemonsBackUp: action.payload,\r\n            }\r\n\r\n        case FILTER_CREATED: \r\n            let filteredPokemons = [...state.pokemons]\r\n            if(action.payload === 'created'){\r\n                filteredPokemons = state.pokemonsBackUp.filter((pokemon) => isNaN(pokemon.id))\r\n            } else if(action.payload === \"api\"){\r\n                filteredPokemons = state.pokemonsBackUp.filter((pokemons) => !isNaN(pokemons.id))\r\n            } else {\r\n                filteredPokemons = state.pokemonsBackUp\r\n            }\r\n            console.log(\"filtrao\", filteredPokemons)\r\n            return{\r\n                ...state,\r\n                pokemons: filteredPokemons\r\n            }\r\n            \r\n        case FILTER_BY_TYPE:\r\n            \r\n            let filterType;\r\n            if (action.payload === \"All\") {\r\n                filterType = state.pokemons;\r\n            } else {\r\n                filterType = state.pokemonsBackUp.filter((e) =>\r\n                    e.types.includes(action.payload)\r\n                );\r\n            }\r\n            return {\r\n                ...state,\r\n                pokemons: filterType,\r\n            };\r\n\r\n        case ORDER_BY_NAME:\r\n            let sortAll = action.payload === \"asc\"\r\n                ? state.pokemons.sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1\r\n                    }\r\n                    if (b.name > a.name) {\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                : state.pokemons.sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return -1\r\n                    }\r\n                    if (b.name > a.name) {\r\n                        return 1\r\n                    }\r\n                    return 0;\r\n                })\r\n            return {\r\n                ...state,\r\n                pokemons: sortAll\r\n            }\r\n\r\n        case ORDER_BY_ATTACK:\r\n            let sortedAttack = [...state.pokemons];\r\n\r\n            if (action.payload === \"min\") {\r\n                sortedAttack.sort((a, b) => a.attack - b.attack);\r\n            }\r\n            if (action.payload === \"max\") {\r\n                sortedAttack.sort((a, b) => b.attack - a.attack);\r\n            }\r\n            return {\r\n                ...state,\r\n                pokemons: sortedAttack,\r\n            };\r\n\r\n        case ORDER_BY_HP:\r\n            let sortedHp = [...state.pokemons]\r\n\r\n            if (action.payload === \"min\") {\r\n                sortedHp.sort((a, b) => a.hp - b.hp);\r\n            }\r\n            if (action.payload === \"max\") {\r\n                sortedHp.sort((a, b) => b.hp - a.hp);\r\n            }\r\n            return {\r\n                ...state,\r\n                pokemons: sortedHp,\r\n            };\r\n\r\n        case GET_NAME_POKEMONS:\r\n            if (action.payload.error) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: [],\r\n                    notFound: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: action.payload,\r\n                    notFound: false,\r\n                }\r\n            }\r\n\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload\r\n            }\r\n\r\n        case GET_DETAIL:\r\n            return {\r\n                ...state,\r\n                detail: action.payload,\r\n            };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// esta línea es para conectar con la extensión del navegador => REDUX DEVTOOLS\r\n\r\nconst store = createStore(\r\nrootReducer,\r\ncomposeEnhancer(applyMiddleware(thunk))\r\n  // esta línea es para poder hacer peticiones a un server\r\n);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeContainer\":\"Home_homeContainer__3VkLz\",\"containerButton\":\"Home_containerButton__a2fjs\",\"filtersContainer\":\"Home_filtersContainer__1sZaz\",\"filterSelect\":\"Home_filterSelect__5lht0\",\"recargar\":\"Home_recargar__TD1qG\",\"reloadIcon\":\"Home_reloadIcon__rRRw-\",\"cardsContainer\":\"Home_cardsContainer__YxePg\",\"cardLink\":\"Home_cardLink__SdTKU\",\"cardRow\":\"Home_cardRow__21OSa\",\"paginadoContainer\":\"Home_paginadoContainer__3HC3v\",\"paginado\":\"Home_paginado__U2aWp\"};"],"sourceRoot":""}